stages:
  - tagChecking
  - build
  - test
  - deploy
  - sonarqube

workflow:
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

tag-checker:
  stage: tagChecking
  script:
    - python3 tag_checker.py $CI_COMMIT_TAG
  only:
    - tags

junit:
  stage: test
  script:
    - ./gradlew test
  artifacts:
    paths:
      - build/jacoco/test.exec

integration-test:
  stage: test
  script:
    - export NUTRITION_API_KEY=${NUTRITION_API_KEY_TEST}
    - ./gradlew integration
  artifacts:
    paths:
      - build/jacoco/integration.exec

coverage:
  stage: test
  needs: ["junit", "integration-test"]
  script:
    - ./gradlew jacocoTestReport
  artifacts:
    paths:
      - build/jacoco/test-report.xml


# builds all branches, except dev and master
branch-build:
  stage: build
  script:
    - ./gradlew bootJar
  artifacts:
    paths:
      - build/libs
  except:
    - tags
    - master
    - dev

deploy-staging:
  stage: deploy
  script:
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/staging/ || true
    - mkdir /home/gitlab-runner/staging/
    - cp -r ./build/libs /home/gitlab-runner/staging
    - cp runner-scripts/staging.sh /home/gitlab-runner/staging.sh
    - chmod u+x /home/gitlab-runner/staging.sh
    - (echo "export DB_USERNAME=${DB_USERNAME}" & echo "export DB_PASSWORD=${DB_PASSWORD}" & echo "export ENCRYPTION_KEY=${ENCRYPTION_KEY}" & echo "export CONSUMER_KEY=${CONSUMER_KEY}" & echo "export CONSUMER_SECRET=${CONSUMER_SECRET}" & echo "export LOCATION_API_KEY=${LOCATION_API_KEY}" & echo "export EMAIL_USERNAME=${EMAIL_USERNAME}" & echo "export EMAIL_PASSWORD=${EMAIL_PASSWORD}"& echo "export NUTRITION_API_KEY=${NUTRITION_API_KEY_TEST}") > /home/gitlab-runner/staging/env.sh
    - sudo systemctl restart staging-tab
  artifacts:
    paths:
      - build/libs
  only:
    - dev

deploy-production:
  stage: deploy
  script:
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/production/ || true
    - mkdir /home/gitlab-runner/production/
    - cp -r ./build/libs /home/gitlab-runner/production
    - cp runner-scripts/production.sh /home/gitlab-runner/production.sh
    - chmod u+x /home/gitlab-runner/production.sh
    - (echo "export DB_USERNAME=${DB_USERNAME}" & echo "export DB_PASSWORD=${DB_PASSWORD}" & echo "export ENCRYPTION_KEY=${ENCRYPTION_KEY}" & echo "export CONSUMER_KEY=${CONSUMER_KEY}" & echo "export CONSUMER_SECRET=${CONSUMER_SECRET}" & echo "export LOCATION_API_KEY=${LOCATION_API_KEY}" & echo "export EMAIL_USERNAME=${EMAIL_USERNAME}" & echo "export EMAIL_PASSWORD=${EMAIL_PASSWORD}"& echo "export NUTRITION_API_KEY=${NUTRITION_API_KEY_TEST}") > /home/gitlab-runner/production/env.sh
    - sudo systemctl restart production-tab
  artifacts:
    paths:
      - build/libs
  only:
    - tags
sonarqube-report:
  stage: sonarqube
  script:
    ./gradlew sonarqube
